name: ci

on:
  push:
  pull_request:

jobs:
  test-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: telegram_dw
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres -d telegram_dw"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      # app/db env used by tests and dbt
      POSTGRES_HOST: localhost
      POSTGRES_PORT: "5432"
      POSTGRES_DB: telegram_dw
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

      # make dbt use the repo dbt/ directory
      DBT_PROFILES_DIR: dbt

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest black flake8

      - name: Lint (black --check)
        run: black --check .

      - name: Lint (flake8)
        run: flake8 .

      - name: Unit + integration tests (pytest)
        run: pytest -q

      # ---- dbt smoke (project placed in ./dbt) ----
      - name: dbt deps
        working-directory: dbt
        run: dbt deps --profiles-dir .

      - name: dbt debug
        working-directory: dbt
        run: dbt debug --profiles-dir .

      - name: dbt run
        working-directory: dbt
        run: dbt run --profiles-dir .

      - name: dbt test
        working-directory: dbt
        run: dbt test --profiles-dir .

      # Optional: validate notebooks are valid JSON if present
      - name: Validate notebooks (optional)
        if: ${{ hashFiles('notebooks/**/*.ipynb') != '' }}
        run: |
          python scripts/validate_notebooks.py || true
